import * as React from 'react';
import type { InputStatus } from '../../_util/statusUtils';
import type { Variant } from '../../config-provider';
import type { SizeType } from '../../config-provider/SizeContext';
<<<<<<< HEAD
=======
import type { ReactNode } from 'react';
>>>>>>> 045142a3932be58d81121ebdf7ef43cf37981634
export interface OTPRef {
    focus: VoidFunction;
    blur: VoidFunction;
    nativeElement: HTMLDivElement;
}
export interface OTPProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onInput'> {
    prefixCls?: string;
    length?: number;
    variant?: Variant;
    rootClassName?: string;
    className?: string;
    style?: React.CSSProperties;
    size?: SizeType;
    defaultValue?: string;
    value?: string;
    onChange?: (value: string) => void;
    formatter?: (value: string) => string;
<<<<<<< HEAD
    separator?: ((index: number) => React.ReactNode) | React.ReactNode;
=======
    separator?: ((index: number) => ReactNode) | ReactNode;
>>>>>>> 045142a3932be58d81121ebdf7ef43cf37981634
    disabled?: boolean;
    status?: InputStatus;
    mask?: boolean | string;
    type?: React.HTMLInputTypeAttribute;
    onInput?: (value: string[]) => void;
}
declare const OTP: React.ForwardRefExoticComponent<OTPProps & React.RefAttributes<OTPRef>>;
export default OTP;
